{"version":3,"sources":["file:///Users/naushad/Dragon/assets/scripts/gamePlay.ts"],"names":["_decorator","Component","Node","Vec3","Prefab","instantiate","UITransform","ccclass","property","GamePlay","Number","startTheGame","addAndMoveObstacles","schedule","time","popTime","popped","arrayOfObstacles","shift","setPosition","usedObstacles","push","updatePosOfUsedObstacles","length","forEach","element","console","log","getPosition","x","start","vecX","cactus","i","maxNoOfObstacles","j","Math","floor","random","cactusPrefab","node","addChild","dinoBoundingBox","getChildByName","getComponent","getBoundingBoxToWorld","onLoad","on","EventType","MOUSE_DOWN"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteFrame, systemEvent, SystemEvent, KeyCode, Vec3, Prefab, instantiate, CCInteger, UITransform, UIComponent, UIModelComponent } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = GamePlay\r\n * DateTime = Wed Sep 08 2021 14:26:45 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = gamePlay.ts\r\n * FileBasenameNoExtension = gamePlay\r\n * URL = db://assets/scripts/gamePlay.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('GamePlay')\r\nexport class GamePlay extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    // GENERATE A RANDOM NUMBER IN RANGE\r\n    // Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    @property(Node)\r\n    cactus : Node = null;\r\n\r\n    @property(Prefab)\r\n    cactusPrefab : Prefab[] = [];\r\n\r\n    @property(Number)\r\n    maxNoOfObstacles = 0;\r\n\r\n    vecX : any;\r\n    arrayOfObstacles : any =  [];\r\n    dinoBoundingBox : any;\r\n    obsBoundingBox : any;\r\n    time = 0;\r\n    popTime = 50;\r\n    usedObstacles : any = [];\r\n    i = -1;\r\n\r\n\r\n    // Intersection2D.rectRect(\r\n    //     container.getComponent(UITransform)?.getBoundingBoxToWorld(),\r\n    //     this.dragable.item.getComponent(UITransform)?.getBoundingBoxToWorld()!\r\n    //     );\r\n\r\n\r\n    /*moveObstacle(obs)\r\n    {\r\n        let i=-1;\r\n        let a = setInterval(() => {\r\n            obs.setPosition(new Vec3(this.vecX.x+(--i*20),this.vecX.y,this.vecX.z));\r\n            if(obs.getPosition().x < -500)\r\n            {\r\n                this.arrayOfObstacles.push(obs);\r\n                obs.setPosition(new Vec3(548.527,-193.655,1));\r\n                i=-1;\r\n                clearInterval(a);\r\n                console.log('stopped the scheduler');\r\n            }\r\n        },90);\r\n    }*/\r\n\r\n    startTheGame()\r\n    {\r\n        // let i=-1;\r\n\r\n        this.addAndMoveObstacles();\r\n        this.schedule(this.addAndMoveObstacles,0.1);\r\n    }\r\n\r\n    addAndMoveObstacles(){\r\n\r\n        this.time++;\r\n\r\n        if(this.popTime == this.time){\r\n            this.time = 0;\r\n            let popped = this.arrayOfObstacles.shift();\r\n            popped.setPosition(new Vec3(548.527,-193.655,1));\r\n            this.usedObstacles.push(popped);\r\n            // this.obsBoundingBox = popped.getComponent(UITransform).getBoundingBoxToWorld();\r\n            // console.log(`${this.dinoBoundingBox} ${this.obsBoundingBox}`);\r\n            //pop one obstacle from unsed and add to used ostacles.\r\n        }\r\n        this.updatePosOfUsedObstacles();\r\n    }\r\n\r\n    updatePosOfUsedObstacles(){\r\n\r\n        //if(usedObs.length >0){\r\n        \r\n        if(this.usedObstacles.length > 0)\r\n        {\r\n            this.usedObstacles.forEach(element =>\r\n                {\r\n                    console.log('for each called');\r\n                    element.setPosition(new Vec3(element.getPosition().x-10,-193.655,1))\r\n                    if(element.getPosition.x < -500)\r\n                    {\r\n                        element.setPosition(new Vec3(548.527,-193.655,1));\r\n                        this.arrayOfObstacles.push(element);\r\n                    }\r\n                });\r\n        }\r\n        //if position is out of screen add to un used obstacles.\r\n    }\r\n\r\n    start () {\r\n        this.vecX = this.cactus.getPosition();\r\n\r\n        for(let i=0;i<this.maxNoOfObstacles;i++)\r\n        {\r\n            let j = Math.floor(Math.random() * (this.cactusPrefab.length-1 - 0 + 1)) + 0;\r\n            \r\n            this.arrayOfObstacles[i] = instantiate(this.cactusPrefab[j]);\r\n            this.node.addChild(this.arrayOfObstacles[i]);\r\n            this.arrayOfObstacles[i].setPosition(new Vec3(548.527,-193.655,1));\r\n        }\r\n\r\n        this.dinoBoundingBox = this.node.getChildByName('DinoStart').getComponent(UITransform).getBoundingBoxToWorld();\r\n        //console.log(this.arrayOfObstacles);\r\n    }\r\n\r\n    onLoad()\r\n    {\r\n        this.node.on(Node.EventType.MOUSE_DOWN,this.startTheGame,this);\r\n    }\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}