{"version":3,"sources":["file:///Users/naushad/Dragon/assets/scripts/gamePlay.ts"],"names":["_decorator","Component","Node","Vec3","Prefab","instantiate","UITransform","Intersection2D","Label","director","ccclass","property","GamePlay","Number","startTheGame","node","getChildByName","active","getComponent","string","setTimeout","initScore","addAndMoveObstacles","schedule","updateScore","time","popTime","popped","arrayOfObstacles","shift","setPosition","usedObstacles","push","updatePosOfUsedObstacles","length","forEach","element","console","log","getPosition","x","rectRect","getBoundingBoxToWorld","unschedule","pause","restartGame","resume","dinoBoundingBox","start","vecX","cactus","i","maxNoOfObstacles","j","Math","floor","random","cactusPrefab","addChild","birdPos","onLoad"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteFrame, systemEvent, SystemEvent, KeyCode, Vec3, Prefab, instantiate, CCInteger, UITransform, UIComponent, UIModelComponent, Intersection2D, Label, director, Button, SystemEventType, UIOpacityComponent } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = GamePlay\r\n * DateTime = Wed Sep 08 2021 14:26:45 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = gamePlay.ts\r\n * FileBasenameNoExtension = gamePlay\r\n * URL = db://assets/scripts/gamePlay.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('GamePlay')\r\nexport class GamePlay extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n\r\n    // GENERATE A RANDOM NUMBER IN RANGE\r\n    // Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    @property(Node)\r\n    cactus : Node = null;\r\n\r\n    @property(Prefab)\r\n    cactusPrefab : Prefab[] = [];\r\n\r\n    @property(Number)\r\n    maxNoOfObstacles = 0;\r\n\r\n    vecX : any;\r\n    arrayOfObstacles : any =  [];\r\n    usedObstacles : any = [];\r\n    initScore = 0;\r\n    dinoBoundingBox : any;\r\n    obsBoundingBox : any;\r\n    time = 0;\r\n    popTime = 150;\r\n    birdPos : any;\r\n   \r\n    startTheGame()\r\n    {\r\n        this.node.getChildByName('restart').active = false;\r\n        this.node.getChildByName('GameOver').getComponent(Label).string = 'Game Started';\r\n        setTimeout( () => {\r\n            this.node.getChildByName('GameOver').active = false;\r\n            this.node.getChildByName('GameOver').getComponent(Label).string = 'Game Over !';\r\n        },2500)\r\n        this.initScore = 0;\r\n        this.addAndMoveObstacles();\r\n        this.schedule(this.updateScore,0.3);\r\n        this.schedule(this.addAndMoveObstacles,0.001);\r\n    }\r\n\r\n    updateScore()\r\n    {\r\n        this.initScore+=2;\r\n        this.node.getChildByName('currentScore').getComponent(Label).string =`${this.initScore}`;\r\n    }\r\n\r\n    addAndMoveObstacles(){\r\n\r\n        this.time++;\r\n\r\n        if(this.popTime == this.time){\r\n            this.time = 0;\r\n            let popped = this.arrayOfObstacles.shift();\r\n            popped.setPosition(new Vec3(548.527,-193.655,1));\r\n            this.usedObstacles.push(popped);\r\n        }\r\n        \r\n        this.updatePosOfUsedObstacles();\r\n    }\r\n\r\n    updatePosOfUsedObstacles(){\r\n            \r\n        if(this.usedObstacles.length > 0)\r\n        {\r\n            this.usedObstacles.forEach(element =>\r\n                {\r\n                    console.log('for each called');\r\n                    element.setPosition(new Vec3(element.getPosition().x-3,-193.655,1))\r\n                    if(element.getPosition.x < -500)\r\n                    {\r\n                        element.setPosition(new Vec3(548.527,-193.655,1));\r\n                        this.arrayOfObstacles.push(element);\r\n                    }\r\n\r\n                    if(Intersection2D.rectRect(\r\n                        this.node.getChildByName('DinoStart').getComponent(UITransform)?.getBoundingBoxToWorld(),\r\n                        element.getComponent(UITransform)?.getBoundingBoxToWorld()!\r\n                        ) == true){\r\n                            console.log('collsion done');\r\n                            this.unschedule(this.addAndMoveObstacles);\r\n                            this.unschedule(this.updateScore);\r\n                            director.pause();\r\n                            this.node.getChildByName('GameOver').active = true;\r\n                            this.node.getChildByName('restart').active = true;\r\n                        }\r\n                });\r\n                //this.node.getChildByName('Bird1').setPosition(new Vec3(this.birdPos.x-3,this.birdPos.y,this.birdPos.z));\r\n        }\r\n    }\r\n\r\n    restartGame()\r\n    {\r\n        director.resume();\r\n        console.log('button clicked');\r\n        console.log(this.usedObstacles);\r\n        this.usedObstacles.forEach(element => {\r\n            element.setPosition(new Vec3(548.527,-193.655,1));\r\n            this.arrayOfObstacles.push(element);\r\n        });\r\n        this.usedObstacles = [];\r\n        console.log(this.usedObstacles);\r\n        this.dinoBoundingBox = this.node.getChildByName('DinoStart').setPosition(new Vec3(-337.263,-200.634,1));\r\n        this.startTheGame();\r\n    }\r\n\r\n    start () {\r\n        this.vecX = this.cactus.getPosition();\r\n        for(let i=0;i<this.maxNoOfObstacles;i++)\r\n        {\r\n            let j = Math.floor(Math.random() * (this.cactusPrefab.length-1 - 0 + 1)) + 0;\r\n            \r\n            this.arrayOfObstacles[i] = instantiate(this.cactusPrefab[j]);\r\n            this.node.addChild(this.arrayOfObstacles[i]);\r\n            this.arrayOfObstacles[i].setPosition(new Vec3(548.527,-193.655,1));\r\n        }\r\n\r\n        this.dinoBoundingBox = this.node.getChildByName('DinoStart').getComponent(UITransform).getBoundingBoxToWorld();\r\n        this.birdPos = this.node.getChildByName('Bird1').getPosition();\r\n        this.startTheGame();\r\n    }\r\n\r\n    onLoad()\r\n    {\r\n\r\n    }\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}